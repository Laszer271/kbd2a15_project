SET SQLBLANKLINES ON
CREATE TABLE BOOK_TYPE 
(
  BOOK_TYPE_ID NUMBER(2) GENERATED ALWAYS AS IDENTITY INCREMENT BY 1 START WITH 1 MAXVALUE 99 MINVALUE 1 NOT NULL 
, TYPE VARCHAR2(25) NOT NULL 
, CONSTRAINT BOOK_TYPE_PK PRIMARY KEY 
  (
    BOOK_TYPE_ID 
  )
  ENABLE 
);

CREATE TABLE CLIENT 
(
  CLIENT_ID NUMBER(5, 0) GENERATED ALWAYS AS IDENTITY INCREMENT BY 1 START WITH 1 MAXVALUE 99999 MINVALUE 1 NOT NULL 
, FIRST_NAME VARCHAR2(20) NOT NULL 
, LAST_NAME VARCHAR2(20) NOT NULL 
, PHONE_NUMBER VARCHAR2(15) 
, EMAIL VARCHAR2(40) 
, PAID NUMBER(7, 2) DEFAULT 0 NOT NULL 
, CONSTRAINT CLIENT_PK PRIMARY KEY 
  (
    CLIENT_ID 
  )
  ENABLE 
);

CREATE TABLE EMPLOYEE 
(
  EMPLOYEE_ID NUMBER(2, 0) GENERATED ALWAYS AS IDENTITY INCREMENT BY 1 START WITH 1 MAXVALUE 99 MINVALUE 1 NOT NULL 
, FIRST_NAME VARCHAR2(20) NOT NULL 
, LAST_NAME VARCHAR2(20) NOT NULL 
, PHONE_NUMBER VARCHAR2(15) 
, EMAIL VARCHAR2(40) 
, BEGIN_DATE DATE NOT NULL 
, END_DATE DATE 
, CONSTRAINT EMPLOYEE_PK PRIMARY KEY 
  (
    EMPLOYEE_ID 
  )
  ENABLE 
);

CREATE TABLE BOOK 
(
  BOOK_ID NUMBER(5, 0) GENERATED ALWAYS AS IDENTITY INCREMENT BY 1 START WITH 1 MAXVALUE 99999 MINVALUE 1 NOT NULL 
, BOOK_TYPE_ID NUMBER(2) NOT NULL 
, TITLE VARCHAR2(40) NOT NULL 
, AUTHOR VARCHAR2(40) NOT NULL 
, RELEASE_DATE DATE 
, STATE NUMBER(1, 0) DEFAULT 0 NOT NULL 
, CONSTRAINT BOOK_PK PRIMARY KEY 
  (
    BOOK_ID 
  )
  ENABLE 
);

CREATE TABLE TRANSACTION 
(
  TRANSACTION_ID NUMBER(6, 0) GENERATED ALWAYS AS IDENTITY INCREMENT BY 1 START WITH 1 MAXVALUE 999999 MINVALUE 1 NOT NULL 
, ORDER_DATE DATE NOT NULL 
, TRANSACTION_DATE DATE 
, EXPIRATION_DATE DATE NOT NULL 
, RETURN_DATE DATE 
, PARENT_ID NUMBER(6, 0) 
, BOOK_ID NUMBER(5, 0) 
, CLIENT_ID NUMBER(5, 0) NOT NULL 
, EMPLOYEE_ID NUMBER(2, 0) NOT NULL 
, CONSTRAINT TRANSACTION_PK PRIMARY KEY 
  (
    TRANSACTION_ID 
  )
  ENABLE 
);

CREATE INDEX BOOK_BOOKTYPE_FK_I ON BOOK (BOOK_TYPE_ID ASC);

CREATE INDEX TRANSACTION_BOOK_FK_I ON TRANSACTION (BOOK_ID ASC);

CREATE INDEX TRANSACTION_CLIENT_FK_I ON TRANSACTION (CLIENT_ID ASC);

CREATE INDEX TRANSACTION_EMPLOYEE_FK_I ON TRANSACTION (EMPLOYEE_ID ASC);

CREATE INDEX TRANSACTION_TRANSACTION_FK_I ON TRANSACTION (PARENT_ID ASC);

ALTER TABLE BOOK_TYPE
ADD CONSTRAINT BOOK_TYPE_UK UNIQUE 
(
  TYPE 
)
ENABLE;

ALTER TABLE CLIENT
ADD CONSTRAINT CLIENT_EMAIL_UK UNIQUE 
(
  EMAIL 
)
ENABLE;

ALTER TABLE CLIENT
ADD CONSTRAINT CLIENT_PHONE_NUMBER_UK UNIQUE 
(
  PHONE_NUMBER 
)
ENABLE;

ALTER TABLE EMPLOYEE
ADD CONSTRAINT EMPLOYEE_EMAIL_UK UNIQUE 
(
  EMAIL 
)
ENABLE;

ALTER TABLE EMPLOYEE
ADD CONSTRAINT EMPLOYEE_PHONE_NUMBER_UK UNIQUE 
(
  PHONE_NUMBER 
)
ENABLE;

ALTER TABLE BOOK
ADD CONSTRAINT BOOK_BOOKTYPE_FK FOREIGN KEY
(
  BOOK_TYPE_ID 
)
REFERENCES BOOK_TYPE
(
  BOOK_TYPE_ID 
)
ENABLE;

ALTER TABLE TRANSACTION
ADD CONSTRAINT TRANSACTION_BOOK_FK FOREIGN KEY
(
  BOOK_ID 
)
REFERENCES BOOK
(
  BOOK_ID 
)
ENABLE;

ALTER TABLE TRANSACTION
ADD CONSTRAINT TRANSACTION_CLIENT_FK FOREIGN KEY
(
  CLIENT_ID 
)
REFERENCES CLIENT
(
  CLIENT_ID 
)
ENABLE;

ALTER TABLE TRANSACTION
ADD CONSTRAINT TRANSACTION_EMPLOYEE_FK FOREIGN KEY
(
  EMPLOYEE_ID 
)
REFERENCES EMPLOYEE
(
  EMPLOYEE_ID 
)
ENABLE;

ALTER TABLE TRANSACTION
ADD CONSTRAINT TRANSACTION_TRANSACTION_FK FOREIGN KEY
(
  PARENT_ID 
)
REFERENCES TRANSACTION
(
  TRANSACTION_ID 
)
ENABLE;

ALTER TABLE CLIENT
ADD CONSTRAINT CLIENT_CONTACT_CHK CHECK 
(PHONE_NUMBER IS NOT NULL OR EMAIL IS NOT NULL)
ENABLE;

ALTER TABLE EMPLOYEE
ADD CONSTRAINT EMPLOYEE_CONTACT_CHK CHECK 
(PHONE_NUMBER IS NOT NULL OR EMAIL IS NOT NULL)
ENABLE;

ALTER TABLE TRANSACTION
ADD CONSTRAINT TRANSACTION_DATES_CHK CHECK 
(expiration_date > order_date)
ENABLE;

COMMENT ON COLUMN BOOK.STATE IS '0=available, 1=reserved, 2=borrowed, 3=lost';

COMMENT ON COLUMN TRANSACTION.ORDER_DATE IS 'When person ordered the book';

COMMENT ON COLUMN TRANSACTION.TRANSACTION_DATE IS 'When person came to library and picked up the book';

COMMENT ON COLUMN TRANSACTION.EXPIRATION_DATE IS 'A date before which a person should return the book';

COMMENT ON COLUMN TRANSACTION.RETURN_DATE IS 'A date at which a person actually returned the book';
